---
title: "Gráfica volcano"
author: "Monica Quintero"
date: "2025-02-26"
output: html_document
---
```{r}
#install.packages("pacman")
library("pacman")

p_load("readr",
       "dplyr",
       "ggplot2", #graficas
       "ggrepel", #mejorar las graficas
       "matrixTests") #hacer las pruebas estadisticas 

PCR <- read.csv(file= "https://raw.githubusercontent.com/ManuelLaraMVZ/Transcript-mica/main/datos_miRNAs.csv")

head(PCR)
```
```{r}
Gen_ref<- PCR %>%     #cmnd + shift + m = %>% create un objeto que se llame gen ref a partir de y me filtra las columnas cndicion
  filter(Condicion == "Control") %>%   # sea exactamente igual ==
  select(-2) #se quita la segunda columna 
#(nuevo)
#se elimino aqui y se quedan 3 genes unicamente
#Se van a sacar los promedios por columna 

Gen_ref

```
```{r}
Gen_int <- PCR %>% 
  filter(Condicion == "Target") %>%  #filtra
  select(-2)

Gen_int
```
```{r}
#correr los promedios de cada columna de los controles

meanCx1<-mean(Gen_ref$Cx1) #sigo de esos = columna
meanCx2<-mean(Gen_ref$Cx2)
meanCx3<-mean(Gen_ref$Cx3)
meanT1<-mean(Gen_ref$T1)
meanT2<-mean(Gen_ref$T2)
meanT3<-mean(Gen_ref$T3)

```
sacar el DcT de cada columna de los genes de interés 
```{r}
DCt <- Gen_int %>% 
  mutate(DCT_Cx1 = Cx1 - meanCx1, #mutado la base de datos para generar nuevas columnas
         DCT_Cx2 = Cx2 - meanCx2,
         DCT_Cx3 = Cx3 - meanCx3,
         DCT_T1 = T1 - meanT1,
         DCT_T2 = T2 - meanT2,
         DCT_T3 = T3 - meanT3) %>% 
  select(-2,-3,-4,-5,-6,-7)

DCt
```
Dos Delta Ct 
```{r}
DosDCt <- DCt %>% 
  mutate(A = 2^-(DCT_Cx1), B = 2^-(DCT_Cx2), #para facilitar análisis
         C = 2^-(DCT_Cx3), D = 2^-(DCT_T1),
         E = 2^-(DCT_T2), F = 2^-(DCT_T3))  %>% 
  select (-2:-7) 

DosDCt
```
Estadística para obtener los valores de p, hacemos un t de Student 
Se usa programa de matrix test 

```{r}
tStudent <- row_t_welch(DosDCt[,c("A", "B", "C")], #Cotrol # c = columna
                        DosDCt[,c("D", "E", "F")]) #Tratamiento
tStudent
```
de odos esos lo que se quiere es el valor de p 
se crea una nueva base de datos para una nueva columna que es p

Recuperar el valor de p para cada gen 
```{r}

PValue <- DosDCt %>% 
  mutate(PV = tStudent$pvalue,
         LPV = -log10(PV)) %>%   #para hacer grafica vulcano se necesita log base 2 de 2 delta delta CT y log de pv 
  select(1,"PV", "LPV")
PValue

#ahora solo se vela columna de P
```
obtener el valor de dos delta delta CT 

```{r}
DosDDCt <- DosDCt %>% 
  mutate(mean_DosDCt_Cx = (A+B+C)/3,
         mean_DosDCt_Tx = (D+E+F)/3,
         DosDDCt = mean_DosDCt_Tx/mean_DosDCt_Cx,
         L2DDCt = log2(DosDDCt)) %>%  #para la grafica se necesita log 2 de DosDDCt
  
  select(-2:-7)

DosDDCt
  
```
Grafica 
```{r}

V_plot <- ggplot(mapping = aes(x= DosDDCt$L2DDCt,
                               y = PValue$LPV))+
  geom_point(color="red")
V_plot
```



